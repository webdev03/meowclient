{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"meowclient An easy to use library to connect to Scratch . Installation Just run npm install meowclient This installs the latest version of meowclient in your package.json . Usage The library supports both CJS and ESM. In this documentation there is only ESM used. Here's how to import the ScratchSession into your code through CJS. const { ScratchSession } = require(\"meowclient\"); A basic starter program: import { ScratchSession, Profile } from \"meowclient\"; const session = new ScratchSession(); await session.init(\"user\", \"pass\"); // change these to your scratch login credentials const me = new Profile(session, session.username); console.log(\"My status is \" + (await me.getStatus())); If you use VS Code, you should be able to use the JSDoc documentation. If you use TypeScript you can also take full advantage of the types. This will soon be a collection of examples for using meowclient. If you cannot find what you want, you can go through the source code or you can ask for help in the official meowclient forum topic .","title":"meowclient"},{"location":"#meowclient","text":"An easy to use library to connect to Scratch .","title":"meowclient"},{"location":"#installation","text":"Just run npm install meowclient This installs the latest version of meowclient in your package.json .","title":"Installation"},{"location":"#usage","text":"The library supports both CJS and ESM. In this documentation there is only ESM used. Here's how to import the ScratchSession into your code through CJS. const { ScratchSession } = require(\"meowclient\"); A basic starter program: import { ScratchSession, Profile } from \"meowclient\"; const session = new ScratchSession(); await session.init(\"user\", \"pass\"); // change these to your scratch login credentials const me = new Profile(session, session.username); console.log(\"My status is \" + (await me.getStatus())); If you use VS Code, you should be able to use the JSDoc documentation. If you use TypeScript you can also take full advantage of the types. This will soon be a collection of examples for using meowclient. If you cannot find what you want, you can go through the source code or you can ask for help in the official meowclient forum topic .","title":"Usage"},{"location":"examples/getSessionJSON/","text":"Get Session JSON This example shows how to get your session JSON. import { ScratchSession } from \"meowclient\"; const session = new ScratchSession(); await session.init(\"user\", \"pass\"); console.log(session.sessionJSON);","title":"Get Session JSON"},{"location":"examples/getSessionJSON/#get-session-json","text":"This example shows how to get your session JSON. import { ScratchSession } from \"meowclient\"; const session = new ScratchSession(); await session.init(\"user\", \"pass\"); console.log(session.sessionJSON);","title":"Get Session JSON"},{"location":"examples/forums/changeSignature/","text":"Change Signature This example shows how to change your forums signature with meowclient. import { ScratchSession } from \"meowclient\"; const session = new ScratchSession(); await session.init(\"user\", \"pass\"); const forum = session.getForum(); await forum.setSignature(`I am ${session.username}!`);","title":"Change Signature"},{"location":"examples/forums/changeSignature/#change-signature","text":"This example shows how to change your forums signature with meowclient. import { ScratchSession } from \"meowclient\"; const session = new ScratchSession(); await session.init(\"user\", \"pass\"); const forum = session.getForum(); await forum.setSignature(`I am ${session.username}!`);","title":"Change Signature"},{"location":"examples/forums/topicsAndPosts/","text":"Topics and Posts This example shows how to get topics in a subforum. To get the subforum ID, go to the page of the subforum (for example, https://scratch.mit.edu/discuss/31 for the Advanced Topics subforum) and get the numbers at the end of the URL (for the Advanced Topics it is 31). import { ScratchSession } from \"meowclient\"; const session = new ScratchSession(); await session.init(\"user\", \"pass\"); const subforumID = 31; const forum = session.getForum(subforumID); const topics = await forum.getTopics(); for (const topic of topics) { topic.title; // The title of the topic topic.id; // The ID of the topic topic.replyCount; // The number of replies in the topic await topic.follow(); // Follow the topic await topic.unfollow(); // Unfollow the topic const posts = await topic.getPosts(); for (const post of posts) { post.id; // The ID of the post post.content; // The content of the post post.parsableContent; // The content of the post that can be parsed (uses node-html-parser) post.author; // The username of the post author post.time; // The time when the post was made await post.edit(`This is a post by ${post.author}!`); // Edits the post } }","title":"Topics and Posts"},{"location":"examples/forums/topicsAndPosts/#topics-and-posts","text":"This example shows how to get topics in a subforum. To get the subforum ID, go to the page of the subforum (for example, https://scratch.mit.edu/discuss/31 for the Advanced Topics subforum) and get the numbers at the end of the URL (for the Advanced Topics it is 31). import { ScratchSession } from \"meowclient\"; const session = new ScratchSession(); await session.init(\"user\", \"pass\"); const subforumID = 31; const forum = session.getForum(subforumID); const topics = await forum.getTopics(); for (const topic of topics) { topic.title; // The title of the topic topic.id; // The ID of the topic topic.replyCount; // The number of replies in the topic await topic.follow(); // Follow the topic await topic.unfollow(); // Unfollow the topic const posts = await topic.getPosts(); for (const post of posts) { post.id; // The ID of the post post.content; // The content of the post post.parsableContent; // The content of the post that can be parsed (uses node-html-parser) post.author; // The username of the post author post.time; // The time when the post was made await post.edit(`This is a post by ${post.author}!`); // Edits the post } }","title":"Topics and Posts"}]}